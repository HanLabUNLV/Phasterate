char* HELP = "\nPROGRAM: pbsScoreMatrix\n\
\n\
USAGE: pbsScoreMatrix [OPTIONS] tree.mod [codefile] > matrices.dat\n\
\n\
DESCRIPTION: \n\
\n\
    Generate log-odds score matrices for use in alignment of\n\
    probabilistic biological sequences (PBSs).  By default, generates\n\
    a matrix for every branch of the tree (as defined in tree.mod),\n\
    but can also generate a matrix for a given branch length (see\n\
    --branch-length).  For a code size of N, an N x N matrix is\n\
    generated by default; --half-pbs will produce an N x 4 matrix, and\n\
    --no-pbs will produce a 4 x 4 matrix (assuming a four-character\n\
    nucleotide alphabet).\n\
\n\
    Two sequences are assumed to have evolved from a common ancestor\n\
    by a reversible continuous-time Markov substitution process, and\n\
    to be separated by a branch of length t.  The conditional\n\
    probability of a base j in one sequence given a base i in the\n\
    other, P(j | i, t) is given by element (i, j) of the matrix\n\
\n\
	P(t) = exp(Qt)\n\
\n\
    where Q is the rate matrix defining the substitution process, and\n\
    element (i, j) of Q is the instantaneous rate at which base i\n\
    changes to base j.  \n\
\n\
    Let S_t(i, j) be a log odds score for the alignment of two bases, i\n\
    and j, based on P(t):\n\
\n\
	S_t(i, j) = log P(i, j | t) / (pi(i) * pi(j)) \n\
	          = log P(j | i, t) pi(i) / (pi(i) * pi(j)) \n\
	          = log P(j | i, t) / pi(j)                         (1)\n\
\n\
    where pi(x) is the \"equilibrium\" or \"background\" probability of\n\
    base x.  Because of reversibility, S(i, j) = S(j, i), and the S(i,\n\
    j) form a symmetric 4 x 4 matrix.  This is the matrix that is\n\
    generated by pbsScoreMatrix with the --no-pbs option.\n\
\n\
    If each \"letter\" in each sequence represents a probability\n\
    distribution over bases, as in a PBS, then the score for two\n\
    letters k and l can be shown to be\n\
\n\
	S'_t(k, l) = log sum_i sum_j p_k(i) p_l(j) exp S_t(i, j)    (2)\n\
\n\
    where the two sums are over the four bases, p_k(i) is the probability\n\
    of base i under the distribution for k, and p_l(j) is the\n\
    probability of base j under the distribution for l.\n\
\n\
    Notice that (2) reduces to (1) when p_k(i) = p_l(j) = 1 for some i\n\
    and j and for all other i' and j' p_k(i') = p_l(j') = 0 (i.e.,\n\
    when all of the probability mass is on a single base in both\n\
    distributions and the PBS reduces to an ordinary nucleotide\n\
    sequence).  The special case of p_l(j) = 1 only is also of\n\
    interest when aligning a PBS and a nucleotide sequence:\n\
\n\
    	S''_t(k, j) = log sum_i p_k(i) exp S_t(i, j)                (3)\n\
\n\
    This is the matrix generated by pbsScoreMatrix with the\n\
    --half-pbs option.\n\
\n\
    Note: all logs are base 2.\n\
\n\
EXAMPLES:\n\
\n\
    Generate an N x N matrix for every branch of the tree, using a\n\
    code file \"code\" (generated by pbsTrain) and a tree model file\n\
    \"mytree.mod\" (generated by phyloFit):\n\
\n\
        pbsScoreMatrix mytree.mod code > matrices.dat\n\
\n\
    Generate an N x N matrix for a branch length of 0.2 expected\n\
    substitutions per site.\n\
\n\
        pbsScoreMatrix --branch-length 0.2 mytree.mod code > matrix.dat\n\
\n\
    Generate an N x 4 matrix:\n\
\n\
        pbsScoreMatrix --branch-length 0.2 --half-pbs mytree.mod \\\n\
	    code > matrix.dat\n\
\n\
    Generate a 4 x 4 matrix:\n\
\n\
        pbsScoreMatrix --branch-length 0.2 --no-pbs code mytree.mod \\\n\
	    > matrix.dat\n\
\n\
    (In this case, a code file is not needed.)\n\
\n\
OPTIONS:\n\
\n\
    --branch-length, -t <length>\n\
	Output a matrix for a branch of the specified length, rather\n\
	than a matrix for every branch of the tree.  The given length\n\
	must be non-negative and in units of expected substitutions\n\
	per site.\n\
\n\
    --half-pbs, -H\n\
	Output an N x 4 matrix, as described above.\n\
\n\
    --no-pbs, -N\n\
	Output a 4 x 4 matrix, as described above.  With this option,\n\
	a code file is not needed.\n\
\n\
    --help, -h\n\
	Show this help message.\n\
";
